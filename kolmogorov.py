from scipy.stats import ksone

random_numbers = [0.021816774865219487, 0.6931069388466927, 0.036728420020547735, 0.4794110141156749,
                  0.2355279152392288, 0.5491902678983294, 0.9292963092741046, 0.9717875516949895, 0.23769896382731323,
                  0.38016252511880566, 0.24622810353202326, 0.14476944000794867, 0.1833701086708783, 0.4159819758580355,
                  0.44698691993393197,
                  0.28182020169264105, 0.5254675053562686, 0.36129182006087707, 0.17959495958356644, 0.7990192179241409,
                  0.062319052376054965, 0.7848219204302518, 0.8526669919180994, 0.5698398485845058, 0.4123338443122178,
                  0.2881764341696466,
                  0.45239804991531063, 0.7997660445253817, 0.75612260305188, 0.3342292081310002, 0.5647537285177094,
                  0.06669876337775556, 0.582439503564288, 0.8592893563868071, 0.4567084872132052, 0.347513378031201,
                  0.4807545585420604, 0.0816926612118639,
                  0.665428991193104, 0.20237123352587685]

random_numbers.sort()

print(random_numbers)

dPlus = []
dMinus = []
i = 1
N = len(random_numbers)

for R in random_numbers:
    dPlus.append((i / N) - R)
    dMinus.append(R - ((i - 1) / N))
    i += 1

dPlus = max(dPlus)
dMinus = max(dMinus)

D = max(dPlus, dMinus)
print("D = ", D)
DTable = ksone.ppf(1 - 0.05/2, N)
print("DTable = ", DTable)

if D < DTable:
    print("SÃ­ es aceptado, la prueba es uniforme")
else:
    print("No es aceptado, la prueba no es uniforme")
